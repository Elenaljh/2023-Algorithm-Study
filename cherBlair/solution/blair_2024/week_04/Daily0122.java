package blair_2024.week_04;

public class Daily0122 {

    // 04-5 병합 정렬

    // 버블 소트 프로그램 2
    // https://www.acmicpc.net/problem/1517

    // 버블 소트: 서로 인접해 있는 두 수를 바꾸면서 정렬하는 방법.
    // 예를 들어 수열이 3,2,1 이었다고 가정하면, 인접해 있는 3,2가 바뀌어야 하므로 2,3,1이 된다.
    // 그 다음은 3,1이 바뀌어야 하므로 2,1,3이 된다.
    // 그 다음에는 2,1이 바뀌어야 하므로 1,2,3이 된다.
    // 더 이상 바꿀 수 없으므로 정렬이 완료된다.

    /*
        ❗️pesudo code

        count (정렬할 수 개수)
        sortArray (정렬할 배열 선언)
        temp (정렬할 때 임시로 사용할 배열 선언)

        for (count 만큼) {
            sortArray 선언
        }
        병합 정렬 함수 수행
        결과 값 출력

        // 병합 정렬 수행하기
        병합 정렬 (start, end) {
            start (시작점), end(종료점), middle(중간점)

            // 재귀 함수 형태로 구현
            병합 정렬 (start, end)
            병합 정렬 (middle + 1, end)
            for (start ~ end) {
                temp 배열 저장
            }

            // 두 그룹 병합 로직
            idx1 (앞쪽 그룹 시작점)
            idx2 (뒤쪽 그룹 시작점)
            while (idx1 <= 중간점 && idx2 <= 종료점) {
                뒤쪽 데이터 값이 더 작아 선택될 때
                swap이 일어났다고 가정하고, 현재 남이 있는 앞쪽 데이터 개수만큼 결괏값을 더함
            }
            반복문의 끝난 후 남아 있는 데이터 정리하기
        }

     */
}
